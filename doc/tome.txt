*tome.txt*  TOME Playbooks for your Terminal

INTRODUCTION                                    *tome*

Tome allows to to manage playbooks for you terminal in combination with vim and tmux.


PLAYBOOK

Usually invoked by a tmux mapping to open Tome in playbook mode. See |TomePlayBook|.

For more information and setup with tmux go to https://github.com/laktak/tome


Default mappings                                *tome-default-mappings*

<Leader>p               Play the current line in normal mode or the selection
                        to the next (or [count] offset) tmux pane.

<Leader>P               Play the current paragraph to the next (or [count]
                        offset) tmux pane.

<Enter>                 When in playbook mode, execute `<Leader>p`.
                        Activated by |TomePlayBook|.


COMMANDS                                        *TomeCommands*

*TomePlayBook*          Set the current buffer to playbook mode by mapping `<Enter>`.

*TomeScratchPad* [name]
                        Set the current buffer as a scratch pad that will be discarded
                        when exiting vim and map `<Enter>`.

*TomeScratchPadOnly* [name]
                        Like |TomeScratchPad| but do not map `<Enter>`.


VARIABLES                                       *TomeVariables*


Your shell already has variables so typically you would not need them in Tome. However,
if you prefer, or if the target has no variables, you can use Tome variables (string
replacement only).


$<NAME>=VALUE
                        Define a new variable called NAME.

$<NAME>
                        Any variable is replaced with its defined value, no other
                        operations are performed. If a variable is undefined Tome
                        will open a scratchpad with the missing variables.

$<<NAME>
                        Escape, results in the literal string $<NAME>.


 vim:tw=78:ts=8:ft=help:norl:
